new.row
c
new.row
c
tbl
Q
source("test_CaisisDataProviders.R");  test_getClinicalTable()
new.row
c
new.row
c
tbl
Q
source("test_CaisisDataProviders.R");  test_getClinicalTable()
source("test_CaisisDataProviders.R");  test_getClinicalTable()
new.row
c
new.row
c
tbl
Q
source("test_CaisisDataProviders.R");  test_getClinicalTable()
new.row
c
c
tbl
Q
source("test_CaisisDataProviders.R");  test_getClinicalTable()
source("test_CaisisDataProviders.R");  test_getClinicalTable()
tbl
c
new.row
names(new.row)
c
c
count=3
    result <- as.data.frame(list(ID = vector("character", count),
                                 Diagnosis  = vector("character", count),
                                 ChemoStartDate = vector("character", count),
                                 ChemoStopDate = vector("character", count),
                                 ChemoAgent = vector("character", count),
                                 RadiationStart = vector("character", count),
                                 RadiationStop = vector("character", count),
                                 RaditionTarget = vector("character", count),
                                 FirstProgression = vector("character", count),
                                 Death = vector("character", count)))

result
source("test_CaisisDataProviders.R");  test_getClinicalTable()
result
new.row
i
n
i
result[i,] <- new.row[colnames(result)]
Q
source("test_CaisisDataProviders.R");  test_getClinicalTable()
result[i,] <- new.row[colnames(result)]
result
i
i <- i+1
result[i,] <- new.row[colnames(result)]
result
c
c
c
tbl
Q
source("test_CaisisDataProviders.R");  test_getClinicalTable()
n
i
n
result
count
patientIds
new.row
result[i,]  <- new.row[colnams(reuslt)]
result
c
n
n
result
Q
source("test_CaisisDataProviders.R");  test_getClinicalTable()
c
result
Q
source("test_CaisisDataProviders.R");  test_getClinicalTable()
result
new.row[colnames(result)]
result[i,]  <- new.row[colnames(result)]
result
c
new.row
result
n
result
c
c
source("test_CaisisDataProviders.R");  test_getClinicalTable()
c
c
new.row
c
source("test_CaisisDataProviders.R");  test_getClinicalTable()
source("test_CaisisDataProviders.R");  test_getClinicalTable()
c
patientIds
new.row
c
new.row
c
patientIds
source("test_CaisisDataProviders.R");  test_getClinicalTable()
new.row[colnames(result)]
c
new.row[colnames(result)]
c
new.row[colnames(result)]
Q
source("test_CaisisDataProviders.R");  test_getClinicalTable()
new.row[colnames(result)]
c
new.row[colnames(result)]
c
new.row[colnames(result)]
Q
source("test_CaisisDataProviders.R");  test_getClinicalTable()
new.row
Q
source("test_CaisisDataProviders.R");  test_getClinicalTable()
new.row
c
new.row
c
new.row
c
tbl
Q
source("test_CaisisDataProviders.R");  test_getClinicalTable()
c
c
c
tbl
Q
source("test_CaisisDataProviders.R");  test_getClinicalTable()
tbl
q
Q
source("test_CaisisDataProviders.R");  test_getClinicalTable()
tbl
Q
source("test_CaisisDataProviders.R");  test_getClinicalTable()
tbl
Q
source("test_CaisisDataProviders.R");  test_getClinicalTable()
dim(tbl)
wdth(300)
tbl
save(tbl, file="clinicalTable320.Rdata")
Q
q('no')
source("test_CaisisDataProviders.R");  test_getClinicalTable()
source("test_CaisisDataProviders.R");  test_getClinicalTable()
dim(tbl)
source("test_CaisisDataProviders.R");  test_getClinicalTable()
source("test_CaisisDataProviders.R");  test_getClinicalTable()
source("test_CaisisDataProviders.R");  runTests()
source("test_CaisisDataProviders.R");  runTests()
q('no')
source("test_CaisisDataProviders.R"); 
runTests
test_constructor()
length(x)
x
    checkEquals(event$PtDeatDateText, "2010-04-30")
length
test_getPatientData_patientInfo()
test_getPatientData_patientInfo()
q('no')
source("test_CaisisDataProviders.R");  runTests()
source("test_CaisisDataProviders.R");  runTests()
source("test_CaisisDataProviders.R")
test_toPatientTimelinesEventStatus()
length(x3)
x3[[1]]
length(x)
x[[1]]
x[[2]]
unlist(lapply(x, function(o) o$PtGender))
q('no')
source("test_CaisisDataProviders.R")
length(x)
x[[1]]
q('no')
source("test_CaisisDataProviders.R")
x2
q('no')
source("test_CaisisDataProviders.R")
source("test_CaisisDataProviders.R")
x[[1]]
x[[2]]
unlist(lapply(x, function(o) o$PtDeatDateText))
unlist(lapply(x, function(o) o$PtDeathDateText))
x2
x3
dim(tbl)
wdth(300)
tbl
q('no')
source("test_CaisisDataProviders.R")
traceback()
q('no')
source("test_CaisisDataProviders.R")
i
new.row
x$TableName
x$DOB
names(x)
Q
q('no')
source("test_CaisisDataProviders.R")
new.row
c
new.row
c
c
c
c
dim(tbl)
tbl
grep("/19", tbl$DOB, fixed=TRUE)
length(grep("/19", tbl$DOB, fixed=TRUE)) == 5
all.twentieth.century
traceback()
getPatientData(cdp, patients="1A14UWY76UUD29815FZHJ9O9I8WOWUR592YS", events="Patients")
print(getPatientData(cdp, patients="1A14UWY76UUD29815FZHJ9O9I8WOWUR592YS", events="Patients"))
c
c
c
c
c
Q
q('no')
source("test_CaisisDataProviders.R")
dim(tbl)
all.twentieth.century
tbl$DOB
which(tbl$DOB=="")
length(which.twentieth.century)
missing
source("test_CaisisDataProviders.R")
test_getClinical_DOB_only()
test_getClinicalTable_DOB_only()
q('no')
source("test_CaisisDataProviders.R"); test_getClinical_DOB_only()
source("test_CaisisDataProviders.R"); test_getClinicalTable_DOB_only()
q('no')
source("test_CaisisDataProviders.R"); test_getClinicalTable_DOB_only()
x
Q
tbl <- getClinicalTable(cdp, patients[1], events)
q('no')
source("test_CaisisDataProviders.R"); test_getClinicalTable_DOB_only()
x
Q
q('no')
source("test_CaisisDataProviders.R"); test_getClinicalTable_DOB_only()
x
new.row
Q
q('no')
source("test_CaisisDataProviders.R"); test_getClinicalTable_DOB_only()
tbl
nchar(tbl$Death)
missing.death.dates
nchar(tbl$Death)
length(which(nchar(tbl$Death) == 0)
)
dim(tbl)
as.data.frame(table(tbl$Death))
source("test_CaisisDataProviders.R"); test_getClinicalTable_DOB_Death()
runTests()
length(patients)
dim(tbl)
tbl
dim(tbl)
wdth(600)
head(tbl)
tbl
colnames(tbl)
as.data.frame(table(tbl$ChemoAgent))
length(x)
x
lapply(x, function(e) e$TableName)
unlist(lapply(x, function(e) e$TableName))
as.list(table(unlist(lapply(x, function(e) e$TableName))))
counts
sort(names(counts))
wdth(100)
sort(names(counts))
x[1]
names(x)
class(x); class(x3)
length(x); length(x3)
x[[1]]
x3[[1]]
names(x[[1]])
names(x3[[1]])
x3[[1]]$PtNum
checkEquals(x3[[1]]$PtNum, 1)
class(x)
class(x)
is(x, "list")
x[[1]]$PtNum
x[[1]]
length(x3)
class(x3)
q('no')
source("test_CaisisDataProviders.R")
class(x3)
length(x3)
length(x)
x[[1]]
x3[[1]]
x[[1]]$PatientID
x[[1]]
x[[1]]$PatientI
x3[[1]]
dim(tbl)
t(tbl[1,])
dir('../extdata')
colnames(tbl)
wdth(100)
colnames(tbl)
source("test_CaisisDataProviders.R"); runTests()
q('no')
source("test_PatientHistoryProvider.R"); runTests()
cdp
class(cdp)
q('no')
source("test_PatientHistoryProvider.R"); runTests()
cdp
slotNames(cdp)
cdp@path
q('no')
q('no')
source("test_PatientHistoryProvider.R"); runTests()
cdp@path
patientIDs(cdp)
q('no')
source("test_PatientHistoryProvider.R"); runTests()
patientEventNames(cdp)
q('no')
source("test_PatientHistoryProvider.R"); runTests()
source("test_PatientHistoryProvider.R"); runTests()
source("test_PatientHistoryProvider.R"); runTests()
class(cdp)
source("test_PatientHistoryProvider.R"); runTests()
source("test_CaisisPatientHistoryProvider.R"); runTests()
source("test_CaisisPatientHistoryProvider.R"); runTests()
q(
'no')
source("test_TCGA_PatientHistoryProvider.R")runTests()
source("test_TCGA_PatientHistoryProvider.R");runTests()
directory
n
files
dim(tbl)
Q
source("test_TCGA_PatientHistoryProvider.R");runTests()
n
files
directory
n
n
n
full.path
n
n
full.path
n
dim(tbl)
colnames(tbl)
head(rownames(tbl))
t(tbl[1,])
t(tbl[3,])
Q
q('no')
source("test_TCGA_PatientHistoryProvider.R");runTests()
source("test_PatientHistoryProvider.R");runTests()
q('no')
source("test_PatientHistoryProvider.R");runTests()
names(x)
.load
Q
q('no')
source("test_PatientHistoryProvider.R");runTests()
c
q('no')
source("test_PatientHistoryProvider.R");runTests()
source("test_PatientHistoryProvider.R");runTests()
q('no')
source("test_PatientHistoryProvider.R");runTests()
q('no')
source("test_PatientHistoryProvider.R");runTests()
q('no')
source("test_PatientHistoryProvider.R");runTests()
php
Q
q('no')
source("test_PatientHistoryProvider.R");runTests()
q('no")
q("no")
source("test_PatientHistoryProvider.R");runTests()
q('no')
source("test_PatientHistoryProvider.R");runTests()
source("test_PatientHistoryProvider.R");runTests()
php
x <- getTable(php)
dim(x)
colnames(tbl)
Q
q('no')
source("test_PatientHistoryProvider.R");runTests()
colnames(tbl)
all(c("ID", "DOB") %in% colnames(tbl))
Q
source("test_PatientHistoryProvider.R");runTests()
args(environment)
emptyenv()
q('no')
source("test_Data2DProvider.R")
runTests()
q('no')
source("test_Data2DProvider.R"); runTests()
q('no')
source("test_Data2DProvider.R"); runTests()
source("test_Data2DProvider.R"); runTests()
q('no')
source("test_Data2DProvider.R"); runTests()
q('no')
source("test_Data2DProvider.R"); runTests()
q('no')
source("test_Data2DProvider.R"); runTests()
dp
q('no')
source("test_Data2DProvider.R"); runTests()
features(dp)
q('no')
source("test_Data2DProvider.R"); runTests()
entities(dp)
q('no')
source("test_Data2DProvider.R"); runTests()
features(dp)
selectMethod("features")
selectMethod("features", signature="LocalFileData2DProvider")
showMethods("features")
q('no')
source("test_Data2DProvider.R"); runTests()
showMethods("features")
q('no')
source("test_Data2DProvider.R"); runTests()
q('no')
source("test_Data2DProvider.R"); runTests()
q('no')
source("test_Data2DProvider.R"); runTests()
showMethods("features")
q('no')
source("test_Data2DProvider.R"); runTests()
q('
no
q('no')
source("test_Data2DProvider.R"); runTests()
q('no')
source("test_Data2DProvider.R"); runTests()
features
entities(dp)
getData(dp)[1:2, 1:2]
head(sort(features))
head(sort(entities))
q('no')
source("test_Data2DProvider.R"); runTests()
size(dp)
q('no')
source("test_Data2DProvider.R"); runTests()
dimensions(dp)
q('no')
source("test_Data2DProvider.R"); runTests()
dimensions(dp)
tbl.2
as.matrix(tbl.2)
sum(as.matrix(tbl.2))
source("test_Data2DProvider.R"); runTests()
q('no')
is(x, "list")
q('no')
source("test_Data2DProvider.R"); runTests()
source("test_Data2DProvider.R"); runTests()
q('no')
