plsr
library(pls)
?plsr
source("test_plsr.R")
source("test_plsr.R")
source("test_plsr.R"); runTests()
sens.pls
names(sens.pls)
sens.pls$Yloadings[,1,2]
sens.pls$Yloadings[,1:2]
sens.pls$loadings[,1:2]
Q
source("test_plsr.R"); startOncoscape()
source("test_plsr.R"); startOncoscape()
source("test_plsr.R"); 
   manifest.file <- "~/s/data/hamid/repo/hbolouri/oncoDev/Oncoscape/inst/scripts/angiogenesis/manifest.txt"
   onco <- Oncoscape(file=NA, port=7654L, mode="websockets", openBrowser=FALSE, manifest.file)

args(Oncoscape)
   onco <- Oncoscape(htmlFile=NA, port=7654L, mode="websockets", openBrowser=FALSE, manifest.file)
setup
setup(onco)
q('no')
source("test_plsr.R"); startOncoscape()
ls(DATA.PROVIDERS)
ls(Oncoscape:::DATA.PROVIDERS)
sort(ls(Oncoscape:::DATA.PROVIDERS))
source("test_plsr.R"); runTests()
c
c
source("test_plsr.R"); runTests()
sort(nams(sens.pls))
sort(names(sens.pls))
dim(oliveoil)
oliveoil
?oliveoil
rownames(oliveoil)
colnames(oliveoil)
oliveoil$chemical
class(oliveoil$chemical)
dim(getData(Oncoscape:::DATAPROVIDER$mrna))
dim(getData(Oncoscape:::DATA.PROVIDER$mrna))
dim(getData(Oncoscape:::DATA.PROVIDERS$mrna))
dim(getData(Oncoscape:::DATA.PROVIDERS[["mRNA"]]))
   tbl.ptclass <<- getData(Oncoscape:::DATA.PROVIDERS[["patientClassification"]]))
   tbl.ptclass <<- getData(Oncoscape:::DATA.PROVIDERS[["patientClassification"]])
dim(tbl.ptclass)
source("test_plsr.R"); runTests()
source("test_plsr.R"); runTests()
x$loadings
names(x$loadings)
class(x$loadings)
x$loading[, 1:2]
x$loadings[, 1:2]
x$loadings
x$loadings[, 1:2]
x$yloadings[, 1:2]
x$Yloadings[, 1:2]
dim(x$loadings[, 1:2])
dim(x$Yloadings[, 1:2])
rownames(x$Yloadings[, 1:2])
rownames(x$loadings[, 1:2])
source("test_plsr.R"); runTests()
source("test_plsr.R"); runTests()
source("test_plsr.R")
source("test_plsr.R")
startOncoscape()
   tbl.pt <<- getData(Oncoscape:::DATA.PROVIDERS[["patientHistory"]])
ls(Oncoscape:::DATA.PROVIDERS)
source("test_plsr.R")
sort(ls(Oncoscape:::DATA.PROVIDERS))
dim(tbl)
sapply(tbl.ptHis, class)
fivenum(tbl.pt$ageAtDx)
fivenum(tbl.ptHis$ageAtDx)
source("test_plsr.R"); runTests()
source("test_plsr.R"); runTests()
dim(tbl.ptHis)
fivenum(tbl.ptHis$ageAtDx)
sapply(tbl.ptHis, class)
fivenum(tbl.ptHis$survival)
source("test_plsr.R"); runTests()
source("test_plsr.R"); runTests()
?plsr
data(yarn)
class(yar)
class(yarn)
dim(yarn)
yard
yarn
dim(yarn)
args(matrix)
tbl.ptHis[1:10, 1:10]
dim(tbl.ptHis)
ageAtDx.lo
ageAtDx.lo
dim(subset(tbl.ptHis, ageAtDx <= agetAtDx.lo))
dim(subset(tbl.ptHis, ageAtDx <= 15))
which(tbl.ptHis <= ageAtDx.lo)
which(tbl.ptHis$ageAtDx <= ageAtDx.lo)
    ageAtDxLowTissues <- tbl.ptHis$ID [which(tbl.ptHis$ageAtDx <= agetAtDx.lo)]
5 <- 10
5 <= 10
q(
'no')
source("test_plsr.R"); runTests()
source("test_plsr.R"); runTests()
source("test_plsr.R"); createClassificationMatirx
source("test_plsr.R"); createClassificationMatrix
ageAtDx.lo
ageAtDx.lo=15
ageAtDx
ageAtDx.lo
which(tbl.ptHis$ageAtDx <= agetAtDx.lo)
ageAtDx.lo <= 15
ageAtDx.lo <- 15
which(tbl.ptHis$ageAtDx <= agetAtDx.lo)
    ageAtDxLowTissues <- tbl.ptHis$ID [which(tbl.ptHis$ageAtDx <= ageAtDx.lo)]
source("test_plsr.R"); test_createClassificationMatrix()
ageAtDxHighTissues
   ageAtDx.hi <- 80
    ageAtDxHighTissues <- subset(tbl.ptHis, ageAtDx >= ageAtDx.hi)$ID
length(ageAtDxHighTissues)
length(ageAtDxLowTissues)
    ageAtDxLowTissues <- sbust(tbl.ptHis, ageAtDx <= ageAtDx.lo)$ID
    ageAtDxLowTissues <- subset(tbl.ptHis, ageAtDx <= ageAtDx.lo)$ID
length(ageAtDxLowTissues)
length(ageAtDxLowTissues <- subset(tbl.ptHis, ageAtDx <= ageAtDx.lo)$ID)
length(ageAtDxLowTissues <- subset(tbl.ptHis, ageAtDx <= 20)$ID)
length(ageAtDxLowTissues <- subset(tbl.ptHis, ageAtDx <= 30)$ID)
    survivalHighTissues <- subset(tbl.ptHis, survival >= survival.hi)$ID
length(survivalHightTissues); length(survivalLowTissues)
    survivalHighTissues <- subset(tbl.ptHis, survival >= survival.hi)$ID
length(survivalHighTissues)
length(survivalLowTissues)
survival.lo
dim(subset(tbl.ptHis, survival <= 0.2)$ID)
dim(subset(tbl.ptHis, survival <= 0.5)$ID)
fivenum(tbl.ptHis$survival)
length(subset(tbl.ptHis, survival <= 0.5)$ID)
length(subset(tbl.ptHis, survival <= 0.2)$ID)
length(subset(tbl.ptHis, survival <= 0.1)$ID)
q('no')    survivalHighTissues <- subset(tbl.ptHis, survival >= survival.hi)$ID
q('no')
